{"version":3,"sources":["components/GoodsList/GoodsList.jsx","App.js","index.js"],"names":["GoodsList","state","isReversed","sortBy","reverse","setState","sortByAlphabet","sortByLength","reset","goods","this","props","visibleGoods","sort","g1","g2","length","localeCompare","className","map","good","key","type","onClick","React","Component","goodsFromServer","App","isVisible","showList","ReactDOM","render","document","getElementById"],"mappings":"4OAGaA,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,OAAQ,IAHZ,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEI,eAAiB,WACf,EAAKD,SAAS,CAAEF,OAAQ,cAb5B,EAgBEI,aAAe,WACb,EAAKF,SAAS,CAAEF,OAAQ,YAjB5B,EAoBEK,MAAQ,WACN,EAAKH,SAAS,CACZH,YAAY,EACZC,OAAQ,MAvBd,4CA2BE,WACE,IAAQM,EAAUC,KAAKC,MAAfF,MACR,EAA+BC,KAAKT,MAA5BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,OACdS,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQZ,GACN,IAAK,SACH,OAAOW,EAAGE,OAASD,EAAGC,OAExB,IAAK,WACH,OAAOF,EAAGG,cAAcF,GAE1B,QACE,OAAO,MAITb,GACFU,EAAaR,UAIb,oCACE,yBAAKc,UAAU,YACb,4BACGN,EAAaO,KAAI,SAAAC,GAAI,OACpB,wBAAIC,IAAOD,GAAOA,QAKxB,4BACEE,KAAK,SACLC,QAASb,KAAKN,SAFhB,WAOA,4BACEkB,KAAK,SACLC,QAASb,KAAKJ,gBAFhB,oBAOA,4BACEgB,KAAK,SACLC,QAASb,KAAKH,cAFhB,kBAOA,4BACEe,KAAK,SACLC,QAASb,KAAKF,OAFhB,cAhFR,GAA+BgB,IAAMC,WCC/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAoCaC,E,4MAhCb1B,MAAQ,CACN2B,WAAW,G,EAGbC,SAAW,WACT,EAAKxB,SAAS,CACZuB,WAAW,K,4CAIf,WACE,IAAQA,EAAclB,KAAKT,MAAnB2B,UAER,OACE,8BACIA,GACA,4BACEN,KAAK,SACLC,QAASb,KAAKmB,UAFhB,SAQDD,GACC,kBAAC,EAAD,CAAWnB,MAAOiB,S,GA1BVF,IAAMC,WCbxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.52a62d75.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class GoodsList extends React.Component {\r\n  state = {\r\n    isReversed: false,\r\n    sortBy: '',\r\n  };\r\n\r\n  reverse = () => {\r\n    this.setState(state => ({\r\n      isReversed: !state.isReversed,\r\n    }));\r\n  };\r\n\r\n  sortByAlphabet = () => {\r\n    this.setState({ sortBy: \"alphabet\" });\r\n  };\r\n\r\n  sortByLength = () => {\r\n    this.setState({ sortBy: \"length\" });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      isReversed: false,\r\n      sortBy: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { goods } = this.props;\r\n    const { isReversed, sortBy } = this.state;\r\n    const visibleGoods = [...goods];\r\n    \r\n    visibleGoods.sort((g1, g2) => {\r\n      switch (sortBy) {\r\n        case 'length':\r\n          return g1.length - g2.length;\r\n\r\n        case 'alphabet':\r\n          return g1.localeCompare(g2);\r\n\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n\r\n    if (isReversed) {\r\n      visibleGoods.reverse();\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <div className=\"goodList\">\r\n          <ul>\r\n            {visibleGoods.map(good => (\r\n              <li key = {good}>{good}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={this.reverse}\r\n        >\r\n          Reverse\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={this.sortByAlphabet}\r\n        >\r\n          Sort by alphabet\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={this.sortByLength}\r\n        >\r\n          Sort by length\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={this.reset}\r\n        >\r\n          Reset\r\n        </button>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isVisible: false,\n  };\n\n  showList = () => {\n    this.setState({\n      isVisible: true,\n    });\n  };\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <div>\n        {!isVisible && (\n          <button\n            type=\"button\"\n            onClick={this.showList}\n          >\n            Start\n          </button>\n        )}\n\n        {isVisible && (\n          <GoodsList goods={goodsFromServer} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}